#!/bin/sh
##
##  A script for building qmake on device.
##  Use in Linuxdroid only !
##
##  Usage:
##
##  git clone https://github.com/linuxdroid/x11-packages
##  cp linuxdroid-build-qmake.sh x11-packages/packages/qt5-base/
##  cd x11-packages/packages/qt5-base/
##  bash linuxdroid-build-qmake.sh

set -e

LINUXDROID_PREFIX=/data/data/com.linuxdroid/files/usr

if [ $(uname -o) != Android ]; then
    echo "This script should be run in Linuxdroid !"
    exit 1
fi

if [ -e "build.sh" ]; then
    source ./build.sh
fi

apt update
apt upgrade -y
apt install -y coreutils clang curl make
hash -r

## Override function from build.sh since we are
## building for host.
linuxdroid_step_configure () {
    export PKG_CONFIG_SYSROOT_DIR="${LINUXDROID_PREFIX}"

    ./configure -v \
        -opensource \
        -confirm-license \
        -release \
        -platform linuxdroid \
        -optimized-qmake \
        -no-rpath \
        -no-use-gold-linker \
        -prefix "${LINUXDROID_PREFIX}" \
        -docdir "${LINUXDROID_PREFIX}/share/doc/qt" \
        -headerdir "${LINUXDROID_PREFIX}/include/qt" \
        -archdatadir "${LINUXDROID_PREFIX}/lib/qt" \
        -datadir "${LINUXDROID_PREFIX}/share/qt" \
        -sysconfdir "${LINUXDROID_PREFIX}/etc/xdg" \
        -examplesdir "${LINUXDROID_PREFIX}/share/doc/qt/examples" \
        -plugindir "$LINUXDROID_PREFIX/libexec/qt" \
        -nomake examples \
        -skip qt3d \
        -skip qtactiveqt \
        -skip qtandroidextras \
        -skip qtcanvas3d \
        -skip qtcharts \
        -skip qtconnectivity \
        -skip qtdatavis3d \
        -skip qtdeclarative \
        -skip qtdoc \
        -skip qtgamepad \
        -skip qtgraphicaleffects \
        -skip qtimageformats \
        -skip qtlocation \
        -skip qtmacextras \
        -skip qtmultimedia \
        -skip qtnetworkauth \
        -skip qtpurchasing \
        -skip qtquickcontrols \
        -skip qtquickcontrols2 \
        -skip qtremoteobjects \
        -skip qtscript \
        -skip qtscxml \
        -skip qtsensors \
        -skip qtserialbus \
        -skip qtserialport \
        -skip qtspeech \
        -skip qtsvg \
        -skip qttools \
        -skip qttranslations \
        -skip qtvirtualkeyboard \
        -skip qtwayland \
        -skip qtwebchannel \
        -skip qtwebengine \
        -skip qtwebglplugin \
        -skip qtwebsockets \
        -skip qtwebview \
        -skip qtwinextras \
        -skip qtx11extras \
        -skip qtxmlpatterns \
        -no-dbus \
        -no-accessibility \
        -no-glib \
        -no-eventfd \
        -no-inotify \
        -icu \
        -system-pcre \
        -system-zlib \
        -ssl \
        -openssl-linked \
        -no-system-proxies \
        -no-cups \
        -system-harfbuzz \
        -no-opengl \
        -no-vulkan \
        -qpa xcb \
        -no-eglfs \
        -no-gbm \
        -no-kms \
        -no-linuxfb \
        -no-mirclient \
        -system-xcb \
        -no-libudev \
        -no-evdev \
        -no-libinput \
        -no-mtdev \
        -no-tslib \
        -system-xkbcommon-x11 \
        -no-xkbcommon-evdev \
        -gif \
        -ico \
        -system-libpng \
        -system-libjpeg \
        -sql-sqlite \
        -no-feature-dnslookup
}

if [ ! -e "qt-everywhere-src-${LINUXDROID_PKG_VERSION}.tar.xz" ]; then
    echo "[*] Downloading Qt sources..."
    curl -L --output "qt-everywhere-src-${LINUXDROID_PKG_VERSION}.tar.xz" "${LINUXDROID_PKG_SRCURL}"
fi

echo "[*] Unpacking Qt sources..."
rm -rf "qt-everywhere-src-${LINUXDROID_PKG_VERSION}"
tar xf "qt-everywhere-src-${LINUXDROID_PKG_VERSION}.tar.xz"
tar xf linuxdroid-prebuilt-qmake.txz

cd "qt-everywhere-src-${LINUXDROID_PKG_VERSION}" && {
    ## On-device hostbuild patch.
    patch -p1 -i ../linuxdroid-prebuilt-qmake/misc/qt5-linuxdroid-build-host.patch

    ## We need only qmake generated by configure, so ignoring
    ## errors here.
    set +e
    echo "[*] Running ./configure..."
    linuxdroid_step_configure
    set -e

    cd qtbase/qmake && {
        ## Bootstrap qmake.
        echo "[*] Bootstrapping qmake..."
        ../bin/qmake -spec linuxdroid -o Makefile.qmake-aux qmake-aux.pro
        make -f Makefile.qmake-aux

        ## Just verify.
        echo "[*] Verifying..."
        ./qmake -spec linuxdroid -o Makefile.qmake-aux qmake-aux.pro
        make -f Makefile.qmake-aux

        cd -
    }

    cd ../
}

echo "[*] Done. Check file './qmake-android-$(uname -m)'."
cp "qt-everywhere-src-${LINUXDROID_PKG_VERSION}/qtbase/qmake/qmake" "./qmake-android-$(uname -m)"